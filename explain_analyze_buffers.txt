Result  (cost=39434.88..267156.73 rows=15498 width=32) (actual time=0.172..1510.835 rows=48341 loops=1)
  Output: ((XMLELEMENT(NAME bounds, XMLATTRIBUTES(p.minlat AS minlat, p.minlon AS minlon, p.maxlat AS maxlat, p.maxlon AS maxlon))))::text
  Buffers: shared hit=734402
  CTE params
    ->  Result  (cost=0.00..0.01 rows=1 width=32) (actual time=0.000..0.000 rows=1 loops=1)
          Output: '27.6164960861206'::double precision, '53.853792295637'::double precision, '27.6719856262207'::double precision, '53.8864592938131'::double precision
  CTE direct_nodes
    ->  Nested Loop  (cost=25.45..2014.06 rows=665 width=49) (actual time=7.108..19.295 rows=37274 loops=1)
          Output: n_1.id, n_1.latitude, n_1.longitude, n_1.changeset_id, n_1.visible, n_1."timestamp", n_1.tile, n_1.version
          Buffers: shared hit=2952
          ->  CTE Scan on params p_1  (cost=0.00..0.02 rows=1 width=32) (actual time=0.000..0.000 rows=1 loops=1)
                Output: p_1.minlon, p_1.minlat, p_1.maxlon, p_1.maxlat
          ->  Bitmap Heap Scan on public.current_nodes n_1  (cost=25.45..2007.39 rows=665 width=49) (actual time=7.104..12.803 rows=37274 loops=1)
                Output: n_1.id, n_1.latitude, n_1.longitude, n_1.changeset_id, n_1.visible, n_1."timestamp", n_1.tile, n_1.version
                Recheck Cond: ((point(((n_1.longitude)::double precision / '10000000'::double precision), ((n_1.latitude)::double precision / '10000000'::double precision)) <@ box(point(p_1.minlon, p_1.minlat), point(p_1.maxlon, p_1.maxlat))) AND n_1.visible)
                Heap Blocks: exact=473
                Buffers: shared hit=2952
                ->  Bitmap Index Scan on current_nodes_point_longitude_latitude_spgist_visible  (cost=0.00..25.28 rows=665 width=0) (actual time=7.040..7.040 rows=37274 loops=1)
                      Index Cond: (point(((n_1.longitude)::double precision / '10000000'::double precision), ((n_1.latitude)::double precision / '10000000'::double precision)) <@ box(point(p_1.minlon, p_1.minlat), point(p_1.maxlon, p_1.maxlat)))
                      Buffers: shared hit=2479
  CTE all_request_ways
    ->  Unique  (cost=6657.21..6662.78 rows=1114 width=33) (actual time=209.389..220.448 rows=7725 loops=1)
          Output: w_1.id, w_1.changeset_id, w_1."timestamp", w_1.visible, w_1.version
          Buffers: shared hit=302738
          ->  Sort  (cost=6657.21..6660.00 rows=1114 width=33) (actual time=209.389..216.166 rows=48344 loops=1)
                Output: w_1.id, w_1.changeset_id, w_1."timestamp", w_1.visible, w_1.version
                Sort Key: w_1.id
                Sort Method: quicksort  Memory: 5313kB
                Buffers: shared hit=302738
                ->  Nested Loop  (cost=0.72..6600.84 rows=1114 width=33) (actual time=7.134..195.577 rows=48344 loops=1)
                      Output: w_1.id, w_1.changeset_id, w_1."timestamp", w_1.visible, w_1.version
                      Buffers: shared hit=302738
                      ->  Nested Loop  (cost=0.42..6237.22 rows=1114 width=8) (actual time=7.129..116.152 rows=48344 loops=1)
                            Output: c.way_id
                            Buffers: shared hit=157526
                            ->  CTE Scan on direct_nodes n_2  (cost=0.00..13.30 rows=665 width=8) (actual time=7.110..34.201 rows=37274 loops=1)
                                  Output: n_2.id, n_2.latitude, n_2.longitude, n_2.changeset_id, n_2.visible, n_2."timestamp", n_2.tile, n_2.version
                                  Buffers: shared hit=2952
                            ->  Index Scan using current_way_nodes_node_idx on public.current_way_nodes c  (cost=0.42..9.34 rows=2 width=16) (actual time=0.002..0.002 rows=1 loops=37274)
                                  Output: c.way_id, c.node_id, c.sequence_id
                                  Index Cond: (c.node_id = n_2.id)
                                  Buffers: shared hit=154574
                      ->  Index Scan using current_ways_pkey on public.current_ways w_1  (cost=0.29..0.32 rows=1 width=33) (actual time=0.001..0.001 rows=1 loops=48344)
                            Output: w_1.id, w_1.changeset_id, w_1."timestamp", w_1.visible, w_1.version
                            Index Cond: (w_1.id = c.way_id)
                            Filter: w_1.visible
                            Buffers: shared hit=145212
  CTE all_request_nodes
    ->  HashAggregate  (cost=23831.35..23973.87 rows=14252 width=49) (actual time=415.941..429.025 rows=40472 loops=1)
          Output: n2.id, n2.latitude, n2.longitude, n2.changeset_id, n2.visible, n2."timestamp", n2.tile, n2.version
          Group Key: n2.id, n2.latitude, n2.longitude, n2.changeset_id, n2.visible, n2."timestamp", n2.tile, n2.version
          Buffers: shared hit=542196
          ->  Append  (cost=0.85..23546.31 rows=14252 width=49) (actual time=209.420..364.107 rows=89214 loops=1)
                Buffers: shared hit=542196
                ->  Nested Loop  (cost=0.85..23390.49 rows=13587 width=49) (actual time=209.420..354.127 rows=51940 loops=1)
                      Output: n2.id, n2.latitude, n2.longitude, n2.changeset_id, n2.visible, n2."timestamp", n2.tile, n2.version
                      Buffers: shared hit=542196
                      ->  Nested Loop  (cost=0.42..16701.85 rows=13587 width=8) (actual time=209.410..252.051 rows=51940 loops=1)
                            Output: c_1.node_id
                            Buffers: shared hit=334144
                            ->  CTE Scan on all_request_ways w2  (cost=0.00..22.28 rows=1114 width=8) (actual time=209.394..221.867 rows=7725 loops=1)
                                  Output: w2.id, w2.changeset_id, w2."timestamp", w2.visible, w2.version
                                  Buffers: shared hit=302738
                            ->  Index Scan using current_way_nodes_pkey on public.current_way_nodes c_1  (cost=0.42..14.85 rows=12 width=16) (actual time=0.002..0.003 rows=7 loops=7725)
                                  Output: c_1.way_id, c_1.node_id, c_1.sequence_id
                                  Index Cond: (c_1.way_id = w2.id)
                                  Buffers: shared hit=31406
                      ->  Index Scan using current_nodes_pkey1 on public.current_nodes n2  (cost=0.42..0.48 rows=1 width=49) (actual time=0.001..0.002 rows=1 loops=51940)
                            Output: n2.id, n2.latitude, n2.longitude, n2.changeset_id, n2.visible, n2."timestamp", n2.tile, n2.version
                            Index Cond: (n2.id = c_1.node_id)
                            Buffers: shared hit=208052
                ->  CTE Scan on direct_nodes  (cost=0.00..13.30 rows=665 width=49) (actual time=0.001..3.346 rows=37274 loops=1)
                      Output: direct_nodes.id, direct_nodes.latitude, direct_nodes.longitude, direct_nodes.changeset_id, direct_nodes.visible, direct_nodes."timestamp", direct_nodes.tile, direct_nodes.version
  CTE relations_from_ways_and_nodes
    ->  Unique  (cost=2911.67..2912.31 rows=128 width=33) (actual time=32.289..32.506 rows=139 loops=1)
          Output: r_1.id, r_1.changeset_id, r_1."timestamp", r_1.visible, r_1.version
          Buffers: shared hit=4005
          ->  Sort  (cost=2911.67..2911.99 rows=128 width=33) (actual time=32.284..32.406 rows=1219 loops=1)
                Output: r_1.id, r_1.changeset_id, r_1."timestamp", r_1.visible, r_1.version
                Sort Key: r_1.id
                Sort Method: quicksort  Memory: 144kB
                Buffers: shared hit=4005
                ->  Nested Loop  (cost=1330.23..2907.19 rows=128 width=33) (actual time=12.721..31.949 rows=1219 loops=1)
                      Output: r_1.id, r_1.changeset_id, r_1."timestamp", r_1.visible, r_1.version
                      Buffers: shared hit=4005
                      ->  Hash Join  (cost=1329.95..2867.83 rows=128 width=8) (actual time=12.708..30.167 rows=1219 loops=1)
                            Output: m.relation_id
                            Hash Cond: ((all_request_ways.id = m.member_id) AND (('Way'::nwr_enum) = m.member_type))
                            Buffers: shared hit=325
                            ->  Append  (cost=0.00..307.32 rows=15366 width=12) (actual time=0.001..8.806 rows=48197 loops=1)
                                  ->  CTE Scan on all_request_ways  (cost=0.00..22.28 rows=1114 width=12) (actual time=0.000..0.884 rows=7725 loops=1)
                                        Output: all_request_ways.id, 'Way'::nwr_enum
                                  ->  CTE Scan on all_request_nodes  (cost=0.00..285.04 rows=14252 width=12) (actual time=0.001..4.619 rows=40472 loops=1)
                                        Output: all_request_nodes.id, 'Node'::nwr_enum
                            ->  Hash  (cost=725.18..725.18 rows=40318 width=20) (actual time=12.494..12.494 rows=40318 loops=1)
                                  Output: m.member_id, m.member_type, m.relation_id
                                  Buckets: 65536  Batches: 1  Memory Usage: 2717kB
                                  Buffers: shared hit=322
                                  ->  Seq Scan on public.current_relation_members m  (cost=0.00..725.18 rows=40318 width=20) (actual time=0.009..5.223 rows=40318 loops=1)
                                        Output: m.member_id, m.member_type, m.relation_id
                                        Buffers: shared hit=322
                      ->  Index Scan using current_relations_pkey on public.current_relations r_1  (cost=0.28..0.30 rows=1 width=33) (actual time=0.001..0.001 rows=1 loops=1219)
                            Output: r_1.id, r_1.changeset_id, r_1."timestamp", r_1.visible, r_1.version
                            Index Cond: (r_1.id = m.relation_id)
                            Buffers: shared hit=3680
  CTE all_request_relations
    ->  HashAggregate  (cost=366.33..367.64 rows=131 width=33) (actual time=33.001..33.022 rows=143 loops=1)
          Output: relations_from_ways_and_nodes.id, relations_from_ways_and_nodes.changeset_id, relations_from_ways_and_nodes."timestamp", relations_from_ways_and_nodes.visible, relations_from_ways_and_nodes.version
          Group Key: relations_from_ways_and_nodes.id, relations_from_ways_and_nodes.changeset_id, relations_from_ways_and_nodes."timestamp", relations_from_ways_and_nodes.visible, relations_from_ways_and_nodes.version
          Buffers: shared hit=4182
          ->  Append  (cost=0.00..364.69 rows=131 width=33) (actual time=32.293..32.918 rows=191 loops=1)
                Buffers: shared hit=4182
                ->  CTE Scan on relations_from_ways_and_nodes  (cost=0.00..2.56 rows=128 width=33) (actual time=32.291..32.523 rows=139 loops=1)
                      Output: relations_from_ways_and_nodes.id, relations_from_ways_and_nodes.changeset_id, relations_from_ways_and_nodes."timestamp", relations_from_ways_and_nodes.visible, relations_from_ways_and_nodes.version
                      Buffers: shared hit=4005
                ->  Nested Loop  (cost=25.57..360.82 rows=3 width=33) (actual time=0.117..0.382 rows=52 loops=1)
                      Output: r_2.id, r_2.changeset_id, r_2."timestamp", r_2.visible, r_2.version
                      Buffers: shared hit=177
                      ->  Hash Join  (cost=25.29..359.42 rows=3 width=8) (actual time=0.114..0.294 rows=52 loops=1)
                            Output: rm.relation_id
                            Hash Cond: (rm.member_id = r2.id)
                            Buffers: shared hit=21
                            ->  Bitmap Heap Scan on public.current_relation_members rm  (cost=21.13..352.89 rows=625 width=16) (actual time=0.057..0.155 rows=649 loops=1)
                                  Output: rm.relation_id, rm.member_type, rm.member_id, rm.member_role, rm.sequence_id
                                  Recheck Cond: (rm.member_type = 'Relation'::nwr_enum)
                                  Heap Blocks: exact=16
                                  Buffers: shared hit=21
                                  ->  Bitmap Index Scan on current_relation_members_member_idx  (cost=0.00..20.98 rows=625 width=0) (actual time=0.050..0.050 rows=649 loops=1)
                                        Index Cond: (rm.member_type = 'Relation'::nwr_enum)
                                        Buffers: shared hit=5
                            ->  Hash  (cost=2.56..2.56 rows=128 width=8) (actual time=0.034..0.034 rows=139 loops=1)
                                  Output: r2.id
                                  Buckets: 1024  Batches: 1  Memory Usage: 14kB
                                  ->  CTE Scan on relations_from_ways_and_nodes r2  (cost=0.00..2.56 rows=128 width=8) (actual time=0.001..0.015 rows=139 loops=1)
                                        Output: r2.id
                      ->  Index Scan using current_relations_pkey on public.current_relations r_2  (cost=0.28..0.46 rows=1 width=33) (actual time=0.001..0.001 rows=1 loops=52)
                            Output: r_2.id, r_2.changeset_id, r_2."timestamp", r_2.visible, r_2.version
                            Index Cond: (r_2.id = rm.relation_id)
                            Buffers: shared hit=156
  CTE all_request_users
    ->  Unique  (cost=3426.74..3504.22 rows=200 width=48) (actual time=84.285..84.753 rows=1970 loops=1)
          Output: all_request_nodes_1.changeset_id, (CASE WHEN u_3.data_public THEN u_3.display_name ELSE NULL::character varying END), (CASE WHEN u_3.data_public THEN u_3.id ELSE NULL::bigint END)
          Buffers: shared hit=4593
          ->  Sort  (cost=3426.74..3465.48 rows=15497 width=48) (actual time=84.283..84.474 rows=1970 loops=1)
                Output: all_request_nodes_1.changeset_id, (CASE WHEN u_3.data_public THEN u_3.display_name ELSE NULL::character varying END), (CASE WHEN u_3.data_public THEN u_3.id ELSE NULL::bigint END)
                Sort Key: all_request_nodes_1.changeset_id
                Sort Method: quicksort  Memory: 203kB
                Buffers: shared hit=4593
                ->  Hash Join  (cost=1612.06..2348.17 rows=15497 width=48) (actual time=82.196..83.734 rows=1970 loops=1)
                      Output: all_request_nodes_1.changeset_id, CASE WHEN u_3.data_public THEN u_3.display_name ELSE NULL::character varying END, CASE WHEN u_3.data_public THEN u_3.id ELSE NULL::bigint END
                      Hash Cond: (c_2.user_id = u_3.id)
                      Buffers: shared hit=4593
                      ->  Hash Join  (cost=1456.60..1979.63 rows=15497 width=16) (actual time=81.415..82.378 rows=1970 loops=1)
                            Output: all_request_nodes_1.changeset_id, c_2.user_id
                            Hash Cond: (all_request_nodes_1.changeset_id = c_2.id)
                            Buffers: shared hit=4482
                            ->  HashAggregate  (cost=503.65..658.62 rows=15497 width=8) (actual time=72.236..72.612 rows=1970 loops=1)
                                  Output: all_request_nodes_1.changeset_id
                                  Group Key: all_request_nodes_1.changeset_id
                                  Buffers: shared hit=4182
                                  ->  Append  (cost=0.00..464.91 rows=15497 width=8) (actual time=0.001..64.160 rows=48340 loops=1)
                                        Buffers: shared hit=4182
                                        ->  CTE Scan on all_request_nodes all_request_nodes_1  (cost=0.00..285.04 rows=14252 width=8) (actual time=0.000..27.041 rows=40472 loops=1)
                                              Output: all_request_nodes_1.changeset_id
                                        ->  CTE Scan on all_request_ways all_request_ways_1  (cost=0.00..22.28 rows=1114 width=8) (actual time=0.002..0.785 rows=7725 loops=1)
                                              Output: all_request_ways_1.changeset_id
                                        ->  CTE Scan on all_request_relations  (cost=0.00..2.62 rows=131 width=8) (actual time=33.005..33.075 rows=143 loops=1)
                                              Output: all_request_relations.changeset_id
                                              Buffers: shared hit=4182
                            ->  Hash  (cost=590.20..590.20 rows=29020 width=16) (actual time=9.084..9.084 rows=29020 loops=1)
                                  Output: c_2.id, c_2.user_id
                                  Buckets: 32768  Batches: 1  Memory Usage: 1617kB
                                  Buffers: shared hit=300
                                  ->  Seq Scan on public.changesets c_2  (cost=0.00..590.20 rows=29020 width=16) (actual time=0.007..3.979 rows=29020 loops=1)
                                        Output: c_2.id, c_2.user_id
                                        Buffers: shared hit=300
                      ->  Hash  (cost=130.76..130.76 rows=1976 width=21) (actual time=0.763..0.763 rows=1976 loops=1)
                            Output: u_3.data_public, u_3.display_name, u_3.id
                            Buckets: 2048  Batches: 1  Memory Usage: 127kB
                            Buffers: shared hit=111
                            ->  Seq Scan on public.users u_3  (cost=0.00..130.76 rows=1976 width=21) (actual time=0.023..0.442 rows=1976 loops=1)
                                  Output: u_3.data_public, u_3.display_name, u_3.id
                                  Buffers: shared hit=111
  ->  Append  (cost=0.00..227566.86 rows=15498 width=32) (actual time=0.171..1505.824 rows=48341 loops=1)
        Buffers: shared hit=734402
        ->  CTE Scan on params p  (cost=0.00..0.02 rows=1 width=32) (actual time=0.171..0.172 rows=1 loops=1)
              Output: XMLELEMENT(NAME bounds, XMLATTRIBUTES(p.minlat AS minlat, p.minlon AS minlon, p.maxlat AS maxlat, p.maxlon AS maxlon))
        ->  Subquery Scan on nodes  (cost=173189.60..173367.75 rows=14252 width=32) (actual time=1079.064..1091.502 rows=40472 loops=1)
              Output: nodes.line
              Buffers: shared hit=670168
              ->  Sort  (cost=173189.60..173225.23 rows=14252 width=40) (actual time=1079.063..1087.078 rows=40472 loops=1)
                    Output: (XMLELEMENT(NAME node, XMLATTRIBUTES(n.id AS id, n.visible AS visible, n.version AS version, n.changeset_id AS changeset, to_char(n."timestamp", 'YYYY-MM-DD"T"HH24:MI:SS"Z"'::text) AS "timestamp", u.name AS "user", u.uid AS uid, (((n.latitude)::numeric / '10000000'::numeric))::numeric(10,7) AS lat, (((n.longitude)::numeric / '10000000'::numeric))::numeric(10,7) AS lon), (xmlagg(XMLELEMENT(NAME tag, XMLATTRIBUTES(t.k AS k, t.v AS v)) ORDER BY t.k, t.v)))), n.id
                    Sort Key: n.id
                    Sort Method: quicksort  Memory: 12698kB
                    Buffers: shared hit=670168
                    ->  Nested Loop  (cost=18.48..172206.29 rows=14252 width=40) (actual time=501.577..1057.631 rows=40472 loops=1)
                          Output: XMLELEMENT(NAME node, XMLATTRIBUTES(n.id AS id, n.visible AS visible, n.version AS version, n.changeset_id AS changeset, to_char(n."timestamp", 'YYYY-MM-DD"T"HH24:MI:SS"Z"'::text) AS "timestamp", u.name AS "user", u.uid AS uid, (((n.latitude)::numeric / '10000000'::numeric))::numeric(10,7) AS lat, (((n.longitude)::numeric / '10000000'::numeric))::numeric(10,7) AS lon), (xmlagg(XMLELEMENT(NAME tag, XMLATTRIBUTES(t.k AS k, t.v AS v)) ORDER BY t.k, t.v))), n.id
                          Buffers: shared hit=670165
                          ->  Hash Join  (cost=6.50..825.99 rows=14252 width=81) (actual time=501.418..531.120 rows=40472 loops=1)
                                Output: n.id, n.visible, n.version, n.changeset_id, n."timestamp", n.latitude, n.longitude, u.name, u.uid
                                Hash Cond: (n.changeset_id = u.changeset_id)
                                Buffers: shared hit=546789
                                ->  CTE Scan on all_request_nodes n  (cost=0.00..285.04 rows=14252 width=41) (actual time=415.943..423.450 rows=40472 loops=1)
                                      Output: n.id, n.latitude, n.longitude, n.changeset_id, n.visible, n."timestamp", n.tile, n.version
                                      Buffers: shared hit=542196
                                ->  Hash  (cost=4.00..4.00 rows=200 width=48) (actual time=85.459..85.459 rows=1970 loops=1)
                                      Output: u.name, u.uid, u.changeset_id
                                      Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 132kB
                                      Buffers: shared hit=4593
                                      ->  CTE Scan on all_request_users u  (cost=0.00..4.00 rows=200 width=48) (actual time=84.292..85.092 rows=1970 loops=1)
                                            Output: u.name, u.uid, u.changeset_id
                                            Buffers: shared hit=4593
                          ->  Aggregate  (cost=11.98..11.99 rows=1 width=32) (actual time=0.004..0.004 rows=1 loops=40472)
                                Output: xmlagg(XMLELEMENT(NAME tag, XMLATTRIBUTES(t.k AS k, t.v AS v)) ORDER BY t.k, t.v)
                                Buffers: shared hit=123376
                                ->  Index Scan using current_node_tags_pkey on public.current_node_tags t  (cost=0.42..11.97 rows=3 width=23) (actual time=0.002..0.002 rows=0 loops=40472)
                                      Output: t.node_id, t.k, t.v
                                      Index Cond: (t.node_id = n.id)
                                      Buffers: shared hit=123368
        ->  Subquery Scan on ways  (cost=46614.15..46628.08 rows=1114 width=32) (actual time=379.663..381.685 rows=7725 loops=1)
              Output: ways.line
              Buffers: shared hit=62509
              ->  Sort  (cost=46614.15..46616.94 rows=1114 width=40) (actual time=379.662..380.780 rows=7725 loops=1)
                    Output: (XMLELEMENT(NAME way, XMLATTRIBUTES(w.id AS id, w.visible AS visible, w.version AS version, w.changeset_id AS changeset, to_char(w."timestamp", 'YYYY-MM-DD"T"HH24:MI:SS"Z"'::text) AS "timestamp", u_1.name AS "user", u_1.uid AS uid), (xmlagg(XMLELEMENT(NAME tag, XMLATTRIBUTES(t_1.k AS k, t_1.v AS v)) ORDER BY t_1.k, t_1.v)), (xmlagg(XMLELEMENT(NAME nd, XMLATTRIBUTES(t_2.node_id AS ref)) ORDER BY t_2.sequence_id)))), w.id
                    Sort Key: w.id
                    Sort Method: quicksort  Memory: 5246kB
                    Buffers: shared hit=62509
                    ->  Nested Loop  (cost=48.17..46557.78 rows=1114 width=40) (actual time=0.915..374.353 rows=7725 loops=1)
                          Output: XMLELEMENT(NAME way, XMLATTRIBUTES(w.id AS id, w.visible AS visible, w.version AS version, w.changeset_id AS changeset, to_char(w."timestamp", 'YYYY-MM-DD"T"HH24:MI:SS"Z"'::text) AS "timestamp", u_1.name AS "user", u_1.uid AS uid), (xmlagg(XMLELEMENT(NAME tag, XMLATTRIBUTES(t_1.k AS k, t_1.v AS v)) ORDER BY t_1.k, t_1.v)), (xmlagg(XMLELEMENT(NAME nd, XMLATTRIBUTES(t_2.node_id AS ref)) ORDER BY t_2.sequence_id))), w.id
                          Buffers: shared hit=62509
                          ->  Nested Loop  (cost=20.25..15424.26 rows=1114 width=105) (actual time=0.688..130.282 rows=7725 loops=1)
                                Output: w.id, w.visible, w.version, w.changeset_id, w."timestamp", u_1.name, u_1.uid, (xmlagg(XMLELEMENT(NAME tag, XMLATTRIBUTES(t_1.k AS k, t_1.v AS v)) ORDER BY t_1.k, t_1.v))
                                Buffers: shared hit=31103
                                ->  Hash Join  (cost=6.50..70.56 rows=1114 width=73) (actual time=0.572..6.793 rows=7725 loops=1)
                                      Output: w.id, w.visible, w.version, w.changeset_id, w."timestamp", u_1.name, u_1.uid
                                      Hash Cond: (w.changeset_id = u_1.changeset_id)
                                      ->  CTE Scan on all_request_ways w  (cost=0.00..22.28 rows=1114 width=33) (actual time=0.001..1.519 rows=7725 loops=1)
                                            Output: w.id, w.changeset_id, w."timestamp", w.visible, w.version
                                      ->  Hash  (cost=4.00..4.00 rows=200 width=48) (actual time=0.555..0.555 rows=1970 loops=1)
                                            Output: u_1.name, u_1.uid, u_1.changeset_id
                                            Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 132kB
                                            ->  CTE Scan on all_request_users u_1  (cost=0.00..4.00 rows=200 width=48) (actual time=0.001..0.251 rows=1970 loops=1)
                                                  Output: u_1.name, u_1.uid, u_1.changeset_id
                                ->  Aggregate  (cost=13.75..13.76 rows=1 width=32) (actual time=0.015..0.015 rows=1 loops=7725)
                                      Output: xmlagg(XMLELEMENT(NAME tag, XMLATTRIBUTES(t_1.k AS k, t_1.v AS v)) ORDER BY t_1.k, t_1.v)
                                      Buffers: shared hit=31103
                                      ->  Index Scan using current_way_tags_pkey on public.current_way_tags t_1  (cost=0.42..13.74 rows=4 width=20) (actual time=0.002..0.003 rows=3 loops=7725)
                                            Output: t_1.way_id, t_1.k, t_1.v
                                            Index Cond: (t_1.way_id = w.id)
                                            Buffers: shared hit=31103
                          ->  Aggregate  (cost=27.92..27.93 rows=1 width=32) (actual time=0.023..0.023 rows=1 loops=7725)
                                Output: xmlagg(XMLELEMENT(NAME nd, XMLATTRIBUTES(t_2.node_id AS ref)) ORDER BY t_2.sequence_id)
                                Buffers: shared hit=31406
                                ->  Index Scan using current_way_nodes_pkey on public.current_way_nodes t_2  (cost=0.42..27.89 rows=12 width=16) (actual time=0.002..0.003 rows=7 loops=7725)
                                      Output: t_2.way_id, t_2.node_id, t_2.sequence_id
                                      Index Cond: (t_2.way_id = w.id)
                                      Buffers: shared hit=31406
        ->  Subquery Scan on relations  (cost=7569.38..7571.02 rows=131 width=32) (actual time=28.963..29.049 rows=143 loops=1)
              Output: relations.line
              Buffers: shared hit=1725
              ->  Sort  (cost=7569.38..7569.71 rows=131 width=40) (actual time=28.963..29.034 rows=143 loops=1)
                    Output: (XMLELEMENT(NAME relation, XMLATTRIBUTES(r.id AS id, r.visible AS visible, r.version AS version, r.changeset_id AS changeset, to_char(r."timestamp", 'YYYY-MM-DD"T"HH24:MI:SS"Z"'::text) AS "timestamp", u_2.name AS "user", u_2.uid AS uid), (xmlagg(XMLELEMENT(NAME tag, XMLATTRIBUTES(t_3.k AS k, t_3.v AS v)) ORDER BY t_3.k, t_3.v)), (xmlagg(XMLELEMENT(NAME member, XMLATTRIBUTES(lower((t_4.member_type)::text) AS type, t_4.member_id AS ref, t_4.member_role AS role)) ORDER BY t_4.sequence_id)))), r.id
                    Sort Key: r.id
                    Sort Method: quicksort  Memory: 400kB
                    Buffers: shared hit=1725
                    ->  Nested Loop  (cost=61.86..7564.77 rows=131 width=40) (actual time=0.286..28.769 rows=143 loops=1)
                          Output: XMLELEMENT(NAME relation, XMLATTRIBUTES(r.id AS id, r.visible AS visible, r.version AS version, r.changeset_id AS changeset, to_char(r."timestamp", 'YYYY-MM-DD"T"HH24:MI:SS"Z"'::text) AS "timestamp", u_2.name AS "user", u_2.uid AS uid), (xmlagg(XMLELEMENT(NAME tag, XMLATTRIBUTES(t_3.k AS k, t_3.v AS v)) ORDER BY t_3.k, t_3.v)), (xmlagg(XMLELEMENT(NAME member, XMLATTRIBUTES(lower((t_4.member_type)::text) AS type, t_4.member_id AS ref, t_4.member_role AS role)) ORDER BY t_4.sequence_id))), r.id
                          Buffers: shared hit=1725
                          ->  Nested Loop  (cost=17.87..1797.50 rows=131 width=105) (actual time=0.113..3.969 rows=143 loops=1)
                                Output: r.id, r.visible, r.version, r.changeset_id, r."timestamp", u_2.name, u_2.uid, (xmlagg(XMLELEMENT(NAME tag, XMLATTRIBUTES(t_3.k AS k, t_3.v AS v)) ORDER BY t_3.k, t_3.v))
                                Buffers: shared hit=438
                                ->  Hash Join  (cost=4.26..10.32 rows=131 width=73) (actual time=0.079..0.506 rows=143 loops=1)
                                      Output: r.id, r.visible, r.version, r.changeset_id, r."timestamp", u_2.name, u_2.uid
                                      Hash Cond: (u_2.changeset_id = r.changeset_id)
                                      ->  CTE Scan on all_request_users u_2  (cost=0.00..4.00 rows=200 width=48) (actual time=0.001..0.164 rows=1970 loops=1)
                                            Output: u_2.changeset_id, u_2.name, u_2.uid
                                      ->  Hash  (cost=2.62..2.62 rows=131 width=33) (actual time=0.041..0.041 rows=143 loops=1)
                                            Output: r.id, r.visible, r.version, r.changeset_id, r."timestamp"
                                            Buckets: 1024  Batches: 1  Memory Usage: 19kB
                                            ->  CTE Scan on all_request_relations r  (cost=0.00..2.62 rows=131 width=33) (actual time=0.001..0.018 rows=143 loops=1)
                                                  Output: r.id, r.visible, r.version, r.changeset_id, r."timestamp"
                                ->  Aggregate  (cost=13.61..13.62 rows=1 width=32) (actual time=0.023..0.023 rows=1 loops=143)
                                      Output: xmlagg(XMLELEMENT(NAME tag, XMLATTRIBUTES(t_3.k AS k, t_3.v AS v)) ORDER BY t_3.k, t_3.v)
                                      Buffers: shared hit=438
                                      ->  Index Scan using current_relation_tags_pkey on public.current_relation_tags t_3  (cost=0.28..13.60 rows=4 width=23) (actual time=0.003..0.004 rows=4 loops=143)
                                            Output: t_3.relation_id, t_3.k, t_3.v
                                            Index Cond: (t_3.relation_id = r.id)
                                            Buffers: shared hit=438
                          ->  Aggregate  (cost=43.99..44.00 rows=1 width=32) (actual time=0.162..0.163 rows=1 loops=143)
                                Output: xmlagg(XMLELEMENT(NAME member, XMLATTRIBUTES(lower((t_4.member_type)::text) AS type, t_4.member_id AS ref, t_4.member_role AS role)) ORDER BY t_4.sequence_id)
                                Buffers: shared hit=1287
                                ->  Index Only Scan using current_relation_members_pkey on public.current_relation_members t_4  (cost=0.41..43.78 rows=21 width=20) (actual time=0.004..0.015 rows=33 loops=143)
                                      Output: t_4.relation_id, t_4.member_type, t_4.member_id, t_4.member_role, t_4.sequence_id
                                      Index Cond: (t_4.relation_id = r.id)
                                      Heap Fetches: 4663
                                      Buffers: shared hit=1273
Planning time: 9.741 ms
Execution time: 1517.541 ms